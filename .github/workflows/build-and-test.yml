name: Build, Test, & Release ðŸš€
on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
env:
  GO_VERSION: "1.20"
concurrency: ${{ github.ref }}
jobs:
  lint:
    strategy:
      matrix:
        go-version: [1.19.x, 1.20.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    name: lint
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        name: checkout
      - uses: actions/setup-go@v4
        name: setup go
        with:
          go-version: ${{ matrix.go-version }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.52
          args: --timeout=10m0s
          skip-cache: true
  test:
    permissions:
      id-token: write
    needs: lint
    strategy:
      matrix:
        go-version: [1.19.x, 1.20.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        name: checkout
      - uses: actions/setup-go@v3
        name: setup go
        with:
          go-version: ${{ matrix.go-version }}
      - name: aws
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::507109231688:role/automation-gha
          aws-region: eu-west-2
      - id: gcp
        name: authenticate to google cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: "access_token"
          workload_identity_provider: "projects/667354156589/locations/global/workloadIdentityPools/cicd/providers/github"
          service_account: storage-writer@bbeesley-iam.iam.gserviceaccount.com
      - run: go test -v ./...
        name: test
  release:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        name: checkout
      - uses: actions/setup-go@v3
        name: setup-go
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: go-semantic-release/action@v1
        name: release
        with:
          hooks: goreleaser
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
